name: Patch APK with ReVanced

on:
  workflow_dispatch:
    inputs:
      url:
        description: 'Direct link to the APK to be patched'
        required: true
        default: ''

jobs:
  Clean:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Delete all releases
        run: |
          gh release list --limit 1000 | awk '{print $1}' | while read tag; do
            echo "Deleting release: $tag"
            gh release delete "$tag" -y || true
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete all tags
        run: |
          git fetch --tags
          git ls-remote --tags origin | awk '{print $2}' | sed 's|refs/tags/||' | while read tag; do
            echo "Deleting tag: $tag"
            git push origin --delete "$tag" || true
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 0

  patch-apk:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@master

      - name: Set up JDK 21
        uses: actions/setup-java@v5
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Ensure tools
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl wget

      - name: Download APK with wget
        run: |
          if [ -z "${{ github.event.inputs.url }}" ]; then
            echo "Error: Не указана ссылка на APK (input 'url')."
            exit 1
          fi
          wget -L -O app.apk "${{ github.event.inputs.url }}"

      - name: Verify APK
        run: |
          APK_SIZE=$(stat -c%s app.apk)
          if [ "$APK_SIZE" -lt 10000000 ]; then
            echo "Error: Downloaded file too small ($APK_SIZE bytes), not a real APK."
            exit 1
          fi
          echo "APK downloaded successfully: $APK_SIZE bytes"

      - name: Download ReVanced CLI
        run: |
          CLI_URL=$(curl -s https://api.github.com/repos/ReVanced/revanced-cli/releases/latest | jq -r '.assets[] | select(.name | endswith(".jar")) | .browser_download_url')
          curl -L "$CLI_URL" -o revanced-cli.jar

      - name: Download ReVanced Patches
        run: |
          PATCHES_URL=$(curl -s https://api.github.com/repos/krolchonok/revanced-patches/releases/latest | jq -r '.assets[] | select(.name | endswith(".rvp")) | .browser_download_url')
          curl -L "$PATCHES_URL" -o patches.rvp

      - name: Patch APK
        run: |
          java -jar revanced-cli.jar patch -f -p patches.rvp \
            --exclusive \
            -e "Downloads" \
            -e "Fix Google login" \
            -e "Disable login requirement" \
            -e "Show seekbar" \
            app.apk

      - name: Rename output
        run: mv -v app-patched.apk titkok-app-patched.apk

      - name: Create Release Info
        run: |
          curl -sSL https://dl.google.com/android/repository/build-tools_r33.0.2-linux.zip -o build-tools.zip
          unzip -q build-tools.zip -d build-tools
          AAPT=build-tools/android-13/aapt

          chmod +x "$AAPT"

          TikTok_INFO=$("$AAPT" dump badging titkok-app-patched.apk | grep versionName)
          TikTok_VersionName=$(echo "$TikTok_INFO" | sed -n "s/.*versionName='\([^']*\)'.*/\1/p")
          TikTok_VersionCode=$(echo "$TikTok_INFO" | sed -n "s/.*versionCode='\([^']*\)'.*/\1/p")
          TikTok_Version="$TikTok_VersionName $TikTok_VersionCode"
          echo "## Titkok Patched APK Release" > release_body.txt
          echo "" >> release_body.txt
          echo "- Tiktok - $TikTok_Version" >> release_body.txt
          echo "" >> release_body.txt
          echo "Patched at: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> release_body.txt
        shell: bash

      - name: Upload Release
        id: upload_release
        uses: softprops/action-gh-release@master
        with:
          files: |
            titkok-app-patched.apk
          tag_name: Titkok-Revanced
          draft: false
          body_path: release_body.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}